<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI" xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="sid-38422fae-e03e-43a3-bef4-bd33b32041b2" targetNamespace="http://bpmn.io/bpmn" exporter="bpmn-js-token-simulation" exporterVersion="0.1.5">
    <bpmn:process id="Process_1" isExecutable="true">
        <bpmn:startEvent id="StartEvent_1y45yut" name="start">
            <bpmn:outgoing>Flow_14zl0yu</bpmn:outgoing>
        </bpmn:startEvent>
        <bpmn:scriptTask id="Activity_0q0spcq" name="takeoff" scriptFormat="JavaScript">
            <bpmn:incoming>Flow_14zl0yu</bpmn:incoming>
            <bpmn:outgoing>Flow_1913056</bpmn:outgoing>
            <bpmn:script>
var node = this.environment.variables.ros_node;
const publisher = node.createPublisher("geometry_msgs/msg/TwistStamped", "cmd_vel");

const speed = 0.0; // scale of the speed of the command
const rot = 0.7; // scale of the rotation of the command // 45° = 0.5 ; 90° = 0.7 ; 180° = 1
// const time_run = 31; // number of time this action will be performed // 45° = 31 ; 90° = 31 ; 180° = 31
// const time_scale_from_ms = 100; // time between each ticking of the scan of this topic
// const factor = 4; // depends on the time needed to transmit the information // assure running


const duration_s = 3.1;
const hz = 20;
const period_ms = Math.round(1000 / hz);
const ticks_total = Math.round(duration_s * hz);

// const time_in_second = time_run*time_scale_from_ms/1000;
const time_in_second = 1;

this.environment.services.console.log("going at "+speed+" m/s and turning at "+rot+" \"&omega;\"/s for "+time_in_second+" second.");

const start = Date.now();
let lastTick = start - period_ms;
let sent = 0;

// boucle bloquante courte, publie a environ 20 Hz pendant 3.1 s
while (Date.now() - start &lt; duration_s * 1000) {
    const now = Date.now();
    if (now - lastTick &gt;= period_ms) {
        publisher.publish({
            header: {
                frame_id: "teleop_twist_joy"
            }, twist: {
                linear: {x: speed, y: 0.0, z: 0.0},
                angular: {x: 0.0, y: 0.0, z: rot}
            }
        })
        lastTick += period_ms;
        sent += 1;
        if (sent &gt;= ticks_total) break;
    }
    // micro pause active pour laisser le moteur respirer sans timers
    // 100 micro iterations environ
    for (let i = 0; i &lt; 100; i++) {}
}
/*
for( let ind = 0; ind &lt; time_run *factor; ind++){
    setTimeout(() =&gt; {
            publisher.publish({
            header: {
                frame_id: "teleop_twist_joy"
            }, twist: {
                linear: {x: speed, y: 0.0, z: 0.0},
                angular: {x: 0.0, y: 0.0, z: rot}
            }
        });
    }, time_scale_from_ms*ind /factor);
}

//maybe useless
setTimeout(() =&gt; {
        publisher.publish({
        header: {
            frame_id: "teleop_twist_joy"
        }, twist: {
            linear: {x: 0.0, y: 0.0, z: 0.0},
            angular: {x: 0.0, y: 0.0, z: 0.0}
        }
    });
}, time_scale_from_ms*time_run);
*/
this.environment.variables.nextTimerDuration = "PT"+time_in_second+"S";

next();
            </bpmn:script>
        </bpmn:scriptTask>
        <bpmn:sequenceFlow id="Flow_14zl0yu" sourceRef="StartEvent_1y45yut" targetRef="Activity_0q0spcq" />
        <bpmn:intermediateCatchEvent id="Event_1t9d9el">
            <bpmn:incoming>Flow_1913056</bpmn:incoming>
            <bpmn:outgoing>Flow_0zcyc0w</bpmn:outgoing>
            <bpmn:timerEventDefinition id="TimerEventDefinition_0z0agyt">
                <bpmn:timeDuration xsi:type="tFormalExpression">
                    ${environment.variables.nextTimerDuration}
                </bpmn:timeDuration>
            </bpmn:timerEventDefinition>
        </bpmn:intermediateCatchEvent>
        <bpmn:sequenceFlow id="Flow_1913056" sourceRef="Activity_0q0spcq" targetRef="Event_1t9d9el" />
        <bpmn:scriptTask id="Activity_00jigd3" name="land" scriptFormat="JavaScript">
            <bpmn:incoming>Flow_0zcyc0w</bpmn:incoming>
            <bpmn:outgoing>Flow_17duhnu</bpmn:outgoing>
            <bpmn:script>
var node = this.environment.variables.ros_node;
const publisher = node.createPublisher("geometry_msgs/msg/TwistStamped", "cmd_vel");

publisher.publish({
    header: {
        frame_id: "teleop_twist_joy"
    }, twist: {
        linear: {x: 0.0, y: 0.0, z: 0.0},
        angular: {x: 0.0, y: 0.0, z: 0.0}
    }
});

this.environment.services.console.log("one lights yellow end");

next();</bpmn:script>
        </bpmn:scriptTask>
        <bpmn:sequenceFlow id="Flow_0zcyc0w" sourceRef="Event_1t9d9el" targetRef="Activity_00jigd3" />
        <bpmn:endEvent id="Event_09m97ox">
            <bpmn:incoming>Flow_17duhnu</bpmn:incoming>
        </bpmn:endEvent>
        <bpmn:sequenceFlow id="Flow_17duhnu" sourceRef="Activity_00jigd3" targetRef="Event_09m97ox" />
    </bpmn:process>
    <bpmndi:BPMNDiagram id="BpmnDiagram_1">
        <bpmndi:BPMNPlane id="BpmnPlane_1" bpmnElement="Process_1">
            <bpmndi:BPMNShape id="StartEvent_1y45yut_di" bpmnElement="StartEvent_1y45yut">
                <omgdc:Bounds x="152" y="102" width="36" height="36" />
                <bpmndi:BPMNLabel>
                    <omgdc:Bounds x="134" y="145" width="73" height="14" />
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="Activity_0q0spcq_di" bpmnElement="Activity_0q0spcq">
                <omgdc:Bounds x="240" y="80" width="100" height="80" />
                <bpmndi:BPMNLabel />
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="Event_1t9d9el_di" bpmnElement="Event_1t9d9el">
                <omgdc:Bounds x="392" y="102" width="36" height="36" />
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="Activity_00jigd3_di" bpmnElement="Activity_00jigd3">
                <omgdc:Bounds x="480" y="80" width="100" height="80" />
                <bpmndi:BPMNLabel />
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="Event_09m97ox_di" bpmnElement="Event_09m97ox">
                <omgdc:Bounds x="632" y="102" width="36" height="36" />
            </bpmndi:BPMNShape>
            <bpmndi:BPMNEdge id="Flow_14zl0yu_di" bpmnElement="Flow_14zl0yu">
                <omgdi:waypoint x="188" y="120" />
                <omgdi:waypoint x="240" y="120" />
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="Flow_1913056_di" bpmnElement="Flow_1913056">
                <omgdi:waypoint x="340" y="120" />
                <omgdi:waypoint x="392" y="120" />
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="Flow_0zcyc0w_di" bpmnElement="Flow_0zcyc0w">
                <omgdi:waypoint x="428" y="120" />
                <omgdi:waypoint x="480" y="120" />
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="Flow_17duhnu_di" bpmnElement="Flow_17duhnu">
                <omgdi:waypoint x="580" y="120" />
                <omgdi:waypoint x="632" y="120" />
            </bpmndi:BPMNEdge>
        </bpmndi:BPMNPlane>
    </bpmndi:BPMNDiagram>
</bpmn:definitions>
